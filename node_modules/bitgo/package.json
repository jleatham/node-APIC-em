{
  "name": "bitgo",
  "version": "1.4.0",
  "description": "BitGo Javascript SDK",
  "main": "./src/index.js",
  "keywords": [
    "bitgo",
    "bitcoin",
    "bitgojs"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/BitGo/BitGoJS.git"
  },
  "devDependencies": {
    "babelify": "^7.0.2",
    "browserify": "~9.0.7",
    "coveralls": "~2.10.0",
    "envify": "^3.4.0",
    "istanbul": "0.3.13",
    "karma": "^0.12.31",
    "karma-chrome-launcher": "^0.1.7",
    "karma-mocha": "^0.1.10",
    "mocha": "2.2.4",
    "mocha-lcov-reporter": "0.0.2",
    "should": "3.3.2",
    "supertest": "^0.15.0",
    "uglify-js": "2.4.13",
    "uglifyify": "^3.0.1",
    "supertest-as-promised": "https://github.com/BitGo/supertest-as-promised/archive/a7f4b612b9fa090ae33a9616c41862aec2b25c7e.tar.gz"
  },
  "testling": {
    "browsers": [
      "chrome/latest",
      "firefox/latest",
      "safari/latest",
      "opera/latest",
      "iphone/latest",
      "ipad/latest",
      "android-browser/4.2..latest"
    ],
    "harness": "mocha",
    "files": [
      "test/*.js",
      "test/bitcoin/*.js"
    ]
  },
  "scripts": {
    "coverage": "./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --timeout 15000 --reporter list test/*.js",
    "coveralls": "sleep 300; ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --timeout 50000 -R spec test/*.js test/bitcoin/*.js && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "babelify": "mkdir -p browser && ./node_modules/.bin/browserify ./src/index.js --exclude superagent-proxy --exclude morgan -t babelify -s BitGoJS -o browser/BitGoJS-babelify.js",
    "compile": "mkdir -p browser && ./node_modules/.bin/browserify ./src/index.js --exclude superagent-proxy --exclude morgan -s BitGoJS -g uglifyify -o browser/BitGoJS-min.js",
    "compile-dbg": "mkdir -p browser && ./node_modules/.bin/browserify ./src/index.js --exclude superagent-proxy --exclude morgan -s BitGoJS -o browser/BitGoJS.js",
    "compile-test": "mkdir -p browser && ./node_modules/.bin/browserify --exclude superagent-proxy --exclude morgan -t envify ./test/*.js > ./browser/tests.js",
    "test": "npm run test-node",
    "test-node": "./node_modules/.bin/istanbul test ./node_modules/.bin/_mocha -- --timeout 20000 --reporter list test/*.js",
    "test-browser": "npm run compile-test && ./node_modules/karma/bin/karma start .karma.conf.js --log-level debug --single-run"
  },
  "dependencies": {
    "argparse": "^0.1.16",
    "assert": "0.4.9",
    "bigi": "1.4.0",
    "bitcoinjs-lib": "1.5.7",
    "body-parser": "^1.10.2",
    "bs58": "2.0.1",
    "bs58check": "1.0.4",
    "express": "^4.11.1",
    "http-proxy": "1.11.1",
    "lodash": "3.7.0",
    "minimist": "0.2.0",
    "moment": "^2.11.2",
    "morgan": "1.5.3",
    "q": "1.1.2",
    "superagent": "^1.4.0",
    "superagent-proxy": "^1.0.0",
    "underscore.string": "2.4.0"
  },
  "readme": "BitGoJS\n=======\n\nBitGo JavaScript SDK\n\nThe BitGo Platform and SDK makes it easy to build multi-signature Bitcoin applications today.\nThe SDK is fully integrated with the BitGo co-signing service for managing all of your BitGo wallets.\n\nIncluded in the SDK are examples for how to use the API to manage your multi-signature wallets.\n\nPlease join us on our [Slack channel](https://slack.bitgo.com) if you have questions or comments about this API.\n\n[![Build Status](https://travis-ci.org/BitGo/BitGoJS.png?branch=master)](https://travis-ci.org/BitGo/BitGoJS) [![BitGo Slack](https://slack.bitgo.com/badge.svg)](https://slack.bitgo.com)\n\n# Installation\n\n`npm install`\n\n# Full Documentation\n\nView our [Javascript SDK Documentation](https://www.bitgo.com/api/?javascript#authentication).\n\n# Example Usage\n\n## Initialize SDK\nCreate an access token by logging into your bitgo account, going to the API access tab [in the settings area](https://www.bitgo.com/settings) and making a developer token.\n```\nvar BitGo = require('bitgo');\nvar bitgo = new BitGo.BitGo({ accessToken: ACCESS_TOKEN }); // defaults to testnet. add env: 'prod' if you want to go against mainnet\nbitgo.session({}, function(err,res) {\n  console.dir(err);\n  console.dir(res);\n});\n```\n\n## Create Wallet\n```\nvar wallet;\nvar params = { \n  \"passphrase\": \"replaceme\", \n  \"label\": \"firstwallet\"\n}\nbitgo.wallets().createWalletWithKeychains(params, function(err, result) {\n  wallet = result.wallet; \n  console.dir(wallet.wallet);\n  console.log(\"Locally created keychain: \" + result.userKeychain.encryptedXprv);\n});\n```\n\n## Create new address\n```\nwallet.createAddress({ \"chain\": 0 }, function callback(err, address) {\n    console.dir(address);\n});\n```\n\n## View transactions\n```\nwallet.transactions({}, function callback(err, transactions) {\n    console.dir(transactions);\n});\n```\n\n## Send coins\n```\nwallet.sendCoins({ \n  address: \"2NEe9QhKPB2gnQLB3hffMuDcoFKZFjHYJYx\", \n  amount: 0.01 * 1e8, \n  walletPassphrase:  \"replaceme\" \n}, function(err, result) {\n    console.dir(result);\n});\n```\n\n## More examples\nFurther demos and examples can be found in the [example](example/) directory and [documented here](https://www.bitgo.com/api/?javascript#examples).\n\n# BitGo Express Local Signing Server (REST API)\n\nSuitable for developers working in a language without an official BitGo SDK.\n\nBitGo Express runs as a service in your own datacenter, and handles the client-side operations involving your own keys, such as partially signing transactions before submitting to BitGo.\nThis ensures your keys never leave your network, and are not seen by BitGo. BitGo Express can also proxy the standard BitGo REST APIs, providing a unified interface to BitGo through a single REST API.\n\n`bin/bitgo-express [-h] [-v] [-p PORT] [-b BIND] [-e ENV] [-d] [-l LOGFILEPATH] [-k KEYPATH] [-c CRTPATH]`\n\n# Compile\n\nCreates a single file of javascript for inclusion in your applications.\n\n`npm run-script compile`\n\n`npm run-script compile-dbg`\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/BitGo/BitGoJS/issues"
  },
  "_id": "bitgo@1.4.0",
  "dist": {
    "shasum": "d38642d152ec39aba96c06fa39f0cd44c280a91b"
  },
  "_from": "bitgo@1.4.0",
  "_resolved": "https://registry.npmjs.org/bitgo/-/bitgo-1.4.0.tgz"
}
